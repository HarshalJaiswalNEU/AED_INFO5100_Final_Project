/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Hospital.LoginPages.Admin;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem.EcoSystem;
import Business.Enterprise.Hospital.Hospital;
import Business.Organization.DonateEntity;
import UserInterface.MainFrameForm;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshaljaiswal
 */
public class AdminTransplants extends javax.swing.JPanel {

    /**
     * Creates new form AdminTransplants
     */
    MainFrameForm mainScreen;
    private EcoSystem ecoSystem;
    private DB4OUtil dB4OUtil;
    Hospital hospital;

    public AdminTransplants(MainFrameForm mainScreen, DB4OUtil dB4OUtil, EcoSystem ecoSystem, Hospital h) {
        initComponents();
        this.mainScreen = mainScreen;
        this.dB4OUtil = dB4OUtil;
        this.ecoSystem = ecoSystem;
        this.hospital = h;
        populateTable(hospital.getEnterpriseName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Type", "Blood group", "Entity name", "Status", "Donor Enterprise", "Receiver Enterprise", "Patient Name", "Donar name"
            }
        ));
        jScrollPane1.setViewportView(tb1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 111, 871, 249));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("Manage Transplants");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(426, 22, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Hospital1.jpg"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -4, 1330, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void populateTable(String name) {
        DefaultTableModel model = (DefaultTableModel) tb1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (DonateEntity d : ecoSystem.getDonateEntityList()) {

            if (d.getDonorEnterprise().getEnterpriseName().toLowerCase().equals(name)) {
                Object[] row = new Object[8];
                row[0] = d.getType();
                row[1] = d.getBloodGroup();
                row[2] = d.getEntityName();
                row[3] = d.getStatus();
                try {
                    row[4] = d.getDonorEnterprise().getEnterpriseName();
                } catch (Exception e) {

                }

                try {
                    row[5] = d.getReceiverEnterprise().getEnterpriseName();
                } catch (Exception e) {

                }
                try {
                    row[6] = d.getReceiverPatient().getName();
                } catch (Exception e) {

                }
                try {
                    row[7] = d.getDonorPatient().getName();
                } catch (Exception e) {

                }

                model.addRow(row);
            }
            try {
                if (d.getReceiverEnterprise().getEnterpriseName().toLowerCase().equals(name)) {
                    Object[] row = new Object[8];
                    row[0] = d.getType();
                    row[1] = d.getBloodGroup();
                    row[2] = d.getEntityName();
                    row[3] = d.getStatus();
                    try {
                        row[4] = d.getDonorEnterprise().getEnterpriseName();
                    } catch (Exception e) {

                    }

                    try {
                        row[5] = d.getReceiverEnterprise().getEnterpriseName();
                    } catch (Exception e) {

                    }
                    try {
                        row[6] = d.getReceiverPatient().getName();
                    } catch (Exception e) {

                    }
                    try {
                        row[7] = d.getDonorPatient().getName();
                    } catch (Exception e) {

                    }

                    model.addRow(row);
                }
            } catch (Exception e) {

            }

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb1;
    // End of variables declaration//GEN-END:variables
}
